#!/bin/bash

IDDIR=id
IDEXE=landslide-id

if [ ! -d "pebsim" -o ! -d "src/bochs-2.6.8/instrument/landslide" ]; then
	echo -e "\033[01;31m$0 must be run from the root of the landslide repository.\033[00m"
	exit 1
fi

if [ ! -f "$IDDIR/$IDEXE" ]; then
	echo -e "\033[01;31mp2-setup.sh was not run or did not succeed.\033[00m"
	exit 1
fi

PINTOS_FLAG=
CURRENT_ARCH="`cat pebsim/current-architecture.txt 2>/dev/null`"
if [ "$CURRENT_ARCH" = "p2" -o "$CURRENT_ARCH" = "psu" ]; then
	cd pebsim/p2-basecode
	./check-need-p2-setup-again.sh || exit 1
	cd ../../
elif [ "$CURRENT_ARCH" = "pintos" ]; then
	PINTOS_FLAG="-P"
else
	echo -e "\033[01;31munknown architecture in pebsim/current-architecture.txt\033[00m"
	exit 1
fi

MIN_ULIMIT=4095
CUR_ULIMIT="`ulimit -u`"
ULIMIT_DIFF="$(($CUR_ULIMIT-$MIN_ULIMIT))"
if [ "`echo $ULIMIT_DIFF | cut -c1`" = "-" ]; then
	ulimit -u "$MIN_ULIMIT"
	if [ "$?" != 0 ]; then
		echo -e "\033[01;33mwarning: current ulimit $CUR_ULIMIT is too low, but failed to modify it\033[00m"
		echo -e "\033[01;33mdon't be surprised if landslide crashes with 'fork() failed' errors\033[00m"
	fi
fi

SUFFIX=`date +%Y%m%d%H%M%S`

CMDLINE_OPTION_FILE=`mktemp "ls-id-options-$SUFFIX.cfg.XXXXXXXX"`
echo "$@" > $CMDLINE_OPTION_FILE

WRAPPER_LOG="ls-id-log-$SUFFIX.log"

# this should really be using flock instead
LOCKFILE="landslide_already_running_in_this_directory"
# students, if you're reading this, WHAT'S WRONG WITH THIS CODE??
if [ -f "$LOCKFILE" ]; then
	echo -e "\033[01;31mIt seems like Landslide is already running in this directory.\033[00m"
	echo -e "\033[01;31mIf you want to run multiple Landslides at once, please make a separate\033[00m"
	echo -e "\033[01;31m'git clone' and run one Landslide in each.\033[00m"
	echo -e "\033[01;31mTo override this message, remove the file '$LOCKFILE'.\033[00m"
	exit 1
	touch "$LOCKFILE"
fi

ORIGDIR="$PWD"
cd "$IDDIR"
./$IDEXE $PINTOS_FLAG -L $WRAPPER_LOG "$@"
RV=$?

cd "$ORIGDIR"

rm -f "$LOCKFILE"

ID_EXIT_USAGE=2
ID_EXIT_CTRL_C=3

if [ "$RV" = "$ID_EXIT_USAGE" ]; then
	exit $RV
elif [ "$RV" = "$ID_EXIT_CTRL_C" ]; then
	reset -I
	echo
fi

# echo -e "\033[01;33mSaving results. Please be patient.\033[00m"

for logfile in id/ls*log*; do
	gzip -q $logfile
done

# TODO

exit $RV
